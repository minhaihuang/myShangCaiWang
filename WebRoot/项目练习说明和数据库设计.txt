为了简单起见，规定如下：
1 本项目练习的目的是增加整体对项目的经验和把控，那些"炫酷"的效果如果做不出来，就使用普通的方式实现。
2 原项目经过五六年的开发和维护现已包含众多功能，这是时间积累的结果，对于我们学习和练习来说只要把主题功能实现就可以了，所以项目原型已经对项目进行了必要的简化
3 一种商品只能上传一张大图片，系统自动生成对应的小图片（大图片尺寸600x600左右，生成的小图片尺寸只能是120x120）
4 一种商品可以根据分量不同认为是不同的商品，比如黄瓜10公斤装和2公斤装就认为是不同的商品
5 下面的数据库表设计只是包含了主要字段，可以根据自己完成的情况适当添加需要的字段



表设计：

商品表  goodsTable

id            逻辑id、商品编号
goodsName     商品名称
price         商品价格
amounts       商品分量（比如一箱、3公斤、一瓶）
introduction  商品介绍（使用富文本编辑器）
categoryId    商品大类（如蔬菜、水果）
classifyId    商品小类（如蔬菜下面的有机蔬菜，精品蔬菜）
picPath       商品图片路径（如：images/20160106/111.jpg ）
smallPicPath  商品小图路径


用户表（注册成功即为会员）userTable
id            逻辑id
account       账号
password      密码
email         邮箱
name          姓名
gender        性别
address       地址
phone         电话
birthday      出生日期



收货地址表     receiverAddressTable

id             逻辑id
userId         用户id
address        收货地址
isDefault      是否是默认地址
phone          联系电话





订单表      orderTable

id            逻辑id
orderId       订单编号（需要自己生成）
userId        用户id
orderTime     下单时间
status        状态
totalPrice    商品总金额
receiverAddressId   收货地址id
postscript          订单附言



订单商品条目表     orderItemTable   (一个订单可包含多个商品)
id           逻辑id
orderId      所属的订单编号
goodsId      商品id
goodsCount   商品数量



-----------------------------------

应该设计成数据字典的表（或者使用xml文件管理这些数据字典数据）:

categoryTable  商品大类表
id            逻辑id
name          大类名称


classifyTable   商品小类表
id            逻辑id
name          小类名称
categoryId    所属的大类id


-----------------------------------



项目中需要大家完成的功能：

1 此项目作业要求使用 struts+spring+hibernate 实现
2 此项目作业要求有前端展示页面和后台管理页面（原型中只有前端展示页面）
3 要求有完善的用户注册、登录功能
4 要求有完善的权限、角色控制
5 完成前端的商品搜索、展示功能 （可以根据关键字进行模糊查询，可以根据商品分类进行查询）
6 完成前端的商品详情查看功能
7 实现购物车的添加、查看、修改功能
8 完成使用cookie在浏览器端记录购物车内商品的功能（购物车内的数据并不保存到数据库）（用户下次访问时购物车中还是上次退出时的状态）
9 尽可能完成前端的member下的页面的功能
10 实现生成订单、修改订单的功能
11 infopage目录下的页面不需要做处理
12 在后台实现对商品的添加、维护功能
13 其他功能可以根据自己的情况自己决定是否实现
14 此项目作业应至少拿出一周时间来做，完成后需要把项目的功能演示录屏以及源码作为作业提交到系统上


